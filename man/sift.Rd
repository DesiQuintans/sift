% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sift.R
\name{sift}
\alias{sift}
\title{Fuzzily search dataframe column names, labels, and factor levels to find variables}
\usage{
sift(df, ..., .dist = 0.1, .rebuild = FALSE)
}
\arguments{
\item{df}{(Dataframe) A dataframe to search through.}

\item{...}{(Dots) Search query. See Details for more information.}

\item{.dist}{(Numeric) The maximum distance allowed for a match when searching
fuzzily. See \code{max.distance} in \code{\link[=agrep]{agrep()}}.}

\item{.rebuild}{(Logical) If \code{TRUE}, then force a dictionary rebuild even if it normally
would not be triggered.}
}
\value{
If \code{...} is empty, return the full data dictionary for \code{df}. If the query was
matched, invisibly return the rows of the data dictionary that matched. If the
query was not matched, invisibly return the data dictionary with no rows (but
all columns).
}
\description{
When working with dataframes that are hundreds of columns wide, it can be hard to find
which column contains the variable that you need. This function gives you interactive,
flexible searching through a dataframe, suggesting columns and some basic summary stats
about what they contain.
}
\details{
You have two ways to search with \code{sift()}: \emph{fuzzy search} or \emph{look-around search}.
\itemize{
\item \strong{Fuzzy search} lets you get results that are close, but not exact, matches to your
query. For example, \code{"cars"} can match \code{"cats"}. This is the default search mode in
\code{sift()} because real-world labelling is not always perfect; a query for \code{"baseline"}
will match \code{"baseline"} or \verb{"base line} or even OCR errors or typos like \code{"basellne"}.
The strictness of the match can be controlled with \code{.dist}.
\item \strong{Look-around search} matches keywords regardless of the order you give them. This
means that you can ask for \verb{cow, number} and get a match for \code{"number of cows"}.
This is useful when you have an idea of what keywords should be in a variable label,
but not how those keywords are actually used or phrased. \emph{Note that this is not
a fuzzy search, so the keywords have to match exactly.}
}

The kind of search that is performed depends on how you supply your query to \code{...}:
\itemize{
\item \strong{Pass one bare name:} Fuzzy search with a fixed string. Example: \code{sift(df, cow)}
\item \strong{Pass one string:} Fuzzy search with a regular expression. Example: \code{sift(df, "cow.*?number")}
\item \strong{Pass more than one item:} (either as a vector or in multiple elements of \code{...}) Look-around
non-fuzzy search with fixed strings.
}
}
\examples{
# sift(mtcars_lab)
# sift(mtcars_lab, mileage)

}
