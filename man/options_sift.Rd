% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exp_options_sift.R
\name{options_sift}
\alias{options_sift}
\title{Set and get options related to how \code{\link[=sift]{sift()}} runs.}
\usage{
options_sift(key = c("sift_limit", "sift_guessmax"), val = NULL)
}
\arguments{
\item{key}{(String) The name of an option.}

\item{val}{(Optional) A new value for the option, if you want to change it.}
}
\value{
The option's value.
}
\description{
\itemize{
\item \code{sift_limit} (Integer; default \code{25})
\itemize{
\item How many matches should \code{\link[=sift]{sift()}} print? This saves you from accidentally printing
a summary that is hundreds of columns long.
}
\item \code{sift_guessmax} (Integer; default \code{1000})
\itemize{
\item Running summary statistics on very large dataframes (hundreds of columns, millions
of rows) can take a long time. This option controls the point at which \code{\link[=sift]{sift()}}
decides that a column has too much data in it to use as-is, and starts randomly
sampling from it instead. For any dataframe with \code{nrow() <= guessmax}, the entirety
of each column will be used for summary stats like "Missing \%" and "Peek at
unique values". Above this row count, \code{guessmax} elements of each column will be
randomly sampled without replacement to make these stats, and a warning glyph
will be shown alongside those stats.
}
}
}
\examples{
# options_sift("sift_limit")  # Returns the option's current value

# options_sift("sift_limit", 100)  # Change the value to something else.

# Options set in this function are set in R's options() interface
# options("sift_limit")
# getOption("sift_limit")
}
